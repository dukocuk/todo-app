{"version":3,"sources":["App.js","index.js"],"names":["Todos","React","useState","id","uuidv4","text","completed","todos","setTodos","setText","onRemove","event","theState","theEntryIndex","findIndex","x","target","splice","preventDefault","onToggleComplete","theEntry","find","CreateTodo","onCreate","split","join","prevState","onChange","value","map","todo","Todo","type","checked","onClick","onSubmit","placeholder","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mLAiCA,SAASA,IAAS,IAAD,EACWC,IAAMC,SAAS,CACvC,CACEC,GAAIC,cACJC,KAAM,sBACNC,WAAW,GAEb,CACEH,GAAIC,cACJC,KAAM,gBACNC,WAAW,GAEb,CACEH,GAAIC,cACJC,KAAM,cACNC,WAAW,KAfA,mBACRC,EADQ,KACDC,EADC,OAkBSP,IAAMC,SAAS,IAlBxB,mBAkBRG,EAlBQ,KAkBFI,EAlBE,KAyCTC,EAAW,SAAAC,GACf,IAAMC,EAAQ,YAAOL,GACfM,EAAgBD,EAASE,WAAU,SAAAC,GAAC,OAAIA,EAAEZ,KAAOQ,EAAMK,OAAOb,MAEpES,EAASK,OAAOJ,EAAe,GAC/BL,EAASI,GACTD,EAAMO,kBAOFC,EAAmB,SAACR,GACxB,IAAMC,EAAQ,YAAOL,GACfa,EAAWR,EAASS,MAAK,SAAAN,GAAC,OAAIA,EAAEZ,KAAOQ,EAAMK,OAAOb,MACpDU,EAAgBD,EAASE,WAAU,SAAAC,GAAC,OAAIA,EAAEZ,KAAOQ,EAAMK,OAAOb,MAEpEiB,EAASd,WAAac,EAASd,UAC/BM,EAASC,GAAiBO,EAC1BZ,EAASI,IAGX,OACE,iCAEE,cAACU,EAAD,CAAYC,SA9CC,SAAAZ,GAEK,KADAN,EAAKmB,MAAM,KAAKC,KAAK,KAMzCjB,GAAS,SAAAkB,GAAS,OAChB,CACEvB,GAAIC,cACJC,KAAMA,EACNC,WAAW,IAJG,mBAMboB,OAGLjB,EAAQ,IACRE,EAAMO,kBAdJP,EAAMO,kBA2C0BS,SAjBnB,SAAAhB,GACfF,EAAQE,EAAMK,OAAOY,QAgBiCvB,KAAMA,IAC1D,6BAEGE,EAAMsB,KAAI,SAAAC,GAAI,OAAI,cAACC,EAAD,CAAoB5B,GAAI2B,EAAK3B,GAAIE,KAAMyB,EAAKzB,KAAMC,UAAWwB,EAAKxB,UAAWa,iBAAkBA,EAAkBT,SAAUA,GAAhHoB,EAAK3B,YAO3C,SAAS4B,EAAT,GAAmE,IAApD5B,EAAmD,EAAnDA,GAAIE,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,UAAWI,EAA8B,EAA9BA,SAAUS,EAAoB,EAApBA,iBAC5C,OAAO,+BAEJd,EACD,uBAAOF,GAAIA,EAAI6B,KAAK,WAAWC,QAAS3B,EAAWqB,SAAUR,IAC7D,uBAAOa,KAAK,SAASJ,MAAM,SAASM,QAASxB,OAIjD,SAASY,EAAT,GAAmD,IAA7BC,EAA4B,EAA5BA,SAAUI,EAAkB,EAAlBA,SAAUtB,EAAQ,EAARA,KACxC,OAAO,uBAAM8B,SAAUZ,EAAhB,UAEL,uBAAOS,KAAK,OAAOJ,MAAOvB,EAAMsB,SAAUA,EAAUS,YAAY,gBAChE,uBAAOJ,KAAK,SAASJ,MAAM,MAAMO,SAAUZ,OAIhC,SAASc,IACtB,OACE,sBAAKC,UAAU,MAAf,UACE,2CACA,cAACtC,EAAD,OC/HNuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACJ,EAAD,MAEFK,SAASC,eAAe,W","file":"static/js/main.1e3ce2e6.chunk.js","sourcesContent":["/**\n *\n * Welcome to the Student frontend developer challenge!\n *\n * Your task is to complete a simple Todo app in React. I've left in some partial code\n * for you to get started on.\n *\n * Once finished, users should be able to do the following:\n *\n * 1. \"Add a todo\". Todo is added, when the user types in a text for the todo in the form\n * and presses the \"Add\" button. Users should not be able to add empty todos. Text field\n * should be cleared once a todo is added. Te added todo should show up at the top of the Todo list.\n *\n * 2. \"Show todos\". The user should be able to see all added todos.\n *\n * 3. \"Complete a todo\". When user clicks a checkbox next to the todo, the \"complete\" state\n * of that Todo should toggle to the opposite value and that state should be reflected in the checkbox\n * i.e. if \"complete\" is true, checkbox is \"checked\", else it is \"unchecked\".\n *\n * 4. \"Remove a todo\". Once \"Remove\" button is clicked, the given todo should be removed\n * from the state and also disappear from the todo list.\n *\n * 5. The app should be styled, preferably using https://emotion.sh/, however, any styling\n * approach is acceptable.\n *\n * Note: As much as possible, please try to keep the given boiler plate code so that you can\n * showcase your ability to work with given parameters.\n *\n */\n\nimport React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction Todos() {\n  const [todos, setTodos] = React.useState([\n    {\n      id: uuidv4(),\n      text: \"Complete assignment\",\n      completed: false\n    },\n    {\n      id: uuidv4(),\n      text: \"Go for a walk\",\n      completed: false\n    },\n    {\n      id: uuidv4(),\n      text: \"Get the job\",\n      completed: false\n    }\n  ]);\n  const [text, setText] = React.useState(\"\");\n\n\n  const onCreate = event => {\n    const trimmedText = text.split(\" \").join(\"\")\n    if (trimmedText === \"\") {\n      event.preventDefault();\n      return\n    }\n\n    setTodos(prevState => ([\n      {\n        id: uuidv4(),\n        text: text,\n        completed: false\n      },\n      ...prevState\n    ]\n    ));\n    setText(\"\")\n    event.preventDefault();\n  };\n\n  const onRemove = event => {\n    const theState = [...todos];\n    const theEntryIndex = theState.findIndex(x => x.id === event.target.id)\n\n    theState.splice(theEntryIndex, 1)\n    setTodos(theState)\n    event.preventDefault();\n  }\n\n  const onChange = event => {\n    setText(event.target.value);\n  };\n\n  const onToggleComplete = (event) => {\n    const theState = [...todos];\n    const theEntry = theState.find(x => x.id === event.target.id)\n    const theEntryIndex = theState.findIndex(x => x.id === event.target.id)\n    \n    theEntry.completed = !theEntry.completed\n    theState[theEntryIndex] = theEntry\n    setTodos(theState)\n  };\n\n  return (\n    <main>\n      {/** Show your \"Create todo\" form here */}\n      <CreateTodo onCreate={onCreate} onChange={onChange} text={text}/>\n      <ul>\n        {/** Ouput some todos here */}\n        {todos.map(todo => <Todo key={todo.id} id={todo.id} text={todo.text} completed={todo.completed} onToggleComplete={onToggleComplete} onRemove={onRemove}></Todo>)}\n        \n      </ul>\n    </main>\n  );\n}\n\nfunction Todo({id, text, completed, onRemove, onToggleComplete }) {\n  return <li>\n    {/** Implement individual todo */}\n    {text}\n    <input id={id} type=\"checkbox\" checked={completed} onChange={onToggleComplete}/>\n    <input type=\"submit\" value=\"Remove\" onClick={onRemove}/>\n    </li>;\n}\n\nfunction CreateTodo({ onCreate, onChange, text }) {\n  return <form onSubmit={onCreate}>\n    {/** Implement the form */}\n    <input type=\"text\" value={text} onChange={onChange} placeholder=\"Create todo\" />\n    <input type=\"submit\" value=\"Add\" onSubmit={onCreate}/>\n    </form>;\n}\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>Todo List</h1>\n      <Todos />\n    </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}